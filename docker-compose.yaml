services:
  mcpserver3:
    build: ./servers/server3
    container_name: mcpserver3
    restart: always
    volumes:
      - ./servers/server3:/app
    ports:
      - "8002:8002"
    env_file:
      - .env

  mcpserver4:
    build: ./servers/server4
    container_name: mcpserver4
    restart: always
    volumes:
      - ./servers/server4:/app
    ports:
      - "8003:8003"
    environment:
      - NEO4J_URI=${NEO4J_URI:-bolt://host.docker.internal:7687}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - NEO4J_DATABASE=${NEO4J_DATABASE:-neo4j}
    env_file:
      - .env
    networks:
      - mcp-network

  mcpserver5:
    build: ./servers/server5
    container_name: mcpserver5
    restart: always
    volumes:
      - ./servers/server5:/app
    ports:
      - "8004:8004"
    environment:
      - PRIVATE_APP_ACCESS_TOKEN=${PRIVATE_APP_ACCESS_TOKEN}
      - HOST=0.0.0.0
      - PORT=8004
    env_file:
      - .env
    networks:
      - mcp-network
      
  hostclient:
    build: 
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8501:8501"  # HTTP port
      - "8502:8502"  # HTTPS port (when SSL is enabled)
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_ENDPOINT=${AZURE_ENDPOINT}
      - AZURE_DEPLOYMENT=${AZURE_DEPLOYMENT}
      - AZURE_API_VERSION=${AZURE_API_VERSION}
      - SSL_ENABLED=${SSL_ENABLED:-false}
    volumes:
      - ./client:/app
      - ./client/keys:/app/keys
      - ./client/ssl:/app/ssl
    depends_on:
      - mcpserver4
      - mcpserver5
    networks:
      - mcp-network
networks:
  mcp-network:
    driver: bridge