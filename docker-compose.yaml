services:
  hostclient:
    build: ./client
    ports:
      - "8501:8501"
      - "8503:8503"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_ENDPOINT=${AZURE_ENDPOINT}
      - AZURE_DEPLOYMENT=${AZURE_DEPLOYMENT}
      - AZURE_API_VERSION=${AZURE_API_VERSION}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - PERPLEXITY_MODEL=${PERPLEXITY_MODEL}
      - SSL_ENABLED=${SSL_ENABLED}
    depends_on:
      - mcpserver1
      - mcpserver2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8503/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcpserver1:
    build: ./servers/server1
    ports:
      - "8001:8001"
    environment:
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - PERPLEXITY_MODEL=${PERPLEXITY_MODEL}
      - CACHE_TTL_SECONDS=1800
      - HEALTH_CHECK_TTL_SECONDS=300
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcpserver2:
    build: ./servers/server2
    ports:
      - "8002:8002"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID}
      - PORT=8002
      - HOST=0.0.0.0
      - SEARCH_CACHE_TTL_MINUTES=30
      - WEBPAGE_CACHE_TTL_HOURS=2
      - WEBPAGE_CACHE_MAX_SIZE=1000
      - HEALTH_CHECK_TTL_MINUTES=5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Custom network for better container communication
networks:
  default:
    name: mcp_network
    driver: bridge