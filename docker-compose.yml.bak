services:
  # Original HTTP server
  mcp-server-http:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: mcp-server-http
    ports:
      - "8008:8008"
    environment:
      - MSSQL_HOST=${MSSQL_HOST}
      - MSSQL_USER=${MSSQL_USER}
      - MSSQL_PASSWORD=${MSSQL_PASSWORD}
      - MSSQL_DATABASE=${MSSQL_DATABASE}
      - MSSQL_DRIVER=ODBC Driver 18 for SQL Server
      - TrustServerCertificate=yes
      - Trusted_Connection=no
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network
    restart: unless-stopped

  # New HTTPS server
  mcp-server-https:
    build: 
      context: .
      dockerfile: Dockerfile.https
    container_name: mcp-server-https
    ports:
      - "8443:8443"
    environment:
      - MSSQL_HOST=${MSSQL_HOST}
      - MSSQL_USER=${MSSQL_USER}
      - MSSQL_PASSWORD=${MSSQL_PASSWORD}
      - MSSQL_DATABASE=${MSSQL_DATABASE}
      - USE_HTTPS=${USE_HTTPS}
      - MSSQL_DRIVER=ODBC Driver 18 for SQL Server
      - TrustServerCertificate=yes
      - Trusted_Connection=no
      - SSL_CERT_PATH=/app/certs/server.crt
      - SSL_KEY_PATH=/app/certs/server.key
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network
    restart: unless-stopped

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-forensic-bot
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./app:/usr/share/nginx/html:ro
      - nginx_logs:/var/log/nginx
    networks:
      - mcp-network
    restart: unless-stopped


networks:
  mcp-network:
    driver: bridge

volumes:
  nginx_logs:
    driver: local